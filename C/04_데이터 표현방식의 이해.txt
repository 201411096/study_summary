------------------------------------------------------------
데이터의 표현단위인 비트(Bit)와 바이트(Byte)

비트는 컴퓨터가 표현하는 데이터의 최소단위로서 2진수 값 하나를 저장할 수 있는 메모리의 크기
바이트는 8개의 비트를 묶은 것
------------------------------------------------------------
8진수와 16진수를 이용한 데이터의 표현

int num1 = 10; // 특별한 선언이 없으면 10진수의 표현
int num2 = oxA; // 0x로 시작하면 16진수로 인식
int num3 = 012; // 0으로 시작하면 8진수로 인식
------------------------------------------------------------
정수와 실수의 표현방식

정수의 가장 왼쪽에 존재하는 비트는 부호비트(MSB : most significant bit)
음의 정수를 표현할 떄에는 2의 보수를 취함

1의 보수 방식
0000 +0      1000 -0
0001 1        1001 -1
0010 2        1010 -2
0011 3        1011 -3
0100 4        1100 -4
0101 5        1101 -5
0110 6        1110 -6
0111 7        1111 -7

2의 보수 방식 -> 0이 두개인 문제가 사라지고 -8이 생김
0000 0        1000 -8
0001 1        1001 -7
0010 2        1010 -6
0011 3        1011 -5
0100 4        1100 -4
0101 5        1101 -3
0110 6        1110 -2
0111 7        1111 -1

실수의 표현방식 : 부동소수점 방식(<->고정소수점 방식)
+-(1.m)*2^e-127

32비트 float형 실수(IEEE 부동 소수점 방식)
부호 비트 1비트
지수 비트 8비트 (e)
가수 비트 23비트 (m)

64비트 float형 실수(IEEE 부동 소수점 방식)
부호 비트 1비트
지수 비트 11비트 (e)
가수 비트 52비트 (m)

부동 소수점 방식을 사용하면 고정 소수점 방식보다 훨씬 더 많은 범위를 표현할 수 있지만 항상 오차가 존재함(다른 프로그래밍 언어에도 존재함)
------------------------------------------------------------
비트 연산자 : & | ^ ~ << >>

^연산자 : 비트단위 XOR

^연산은 두개의 비트가 서로 다른 경우에 1을 반환하는 연산
0^0 0
0^1 1
1^0 1
1^1 0